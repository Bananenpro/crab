============ Crab Formal Grammar ============

program -> declaration*

declarationOrStatement -> declaration | statement
declaration -> varDecl | funcDecl
statement -> if | while | for | loopControl | block | expressionStmt 
expressionStmt -> expression ';'
block -> '{' declarationOrStatement* '}'

varDecl -> 'var' IDENTIFIER ('=' expression)? ';'
funcDecl -> 'func' IDENTIFIER '(' parameters? ')' block
parameters -> IDENTIFIER (',' IDENTIFIER)*

if -> 'if' '(' expression ')' statement
while -> 'while' '(' expression ')' statement
for -> 'for' '(' (varDecl|expressionStmt|';') expression? ';' expression? ')' statement
loopControl -> ('break'|'continue') ';'

expression -> assign
assign -> IDENTIFIER ('='|'+='|'-='|'*='|'/='|'%=') assign | conditional
conditional -> or '?' conditional ':' conditional
or -> and (('||'|'^^') and)*
and -> equality ('&&' equality)*
equality -> comparison (('=='|'!=') comparison)*
comparison -> term (('>'|'>='|'<'|'<=') comparison)*
term -> factor (('+'|'-') factor)*
factor -> unary (('*'|'/'|'%') unary)*
unary -> '-' unary | postfix
postfix -> primary ('++'|'--') | primary ('(' arguments? ')')* || primary
arguments -> primary (',' primary)*
primary -> NUMBER | STRING | "true" | "false" | IDENTIFIER | '(' expression ')'
